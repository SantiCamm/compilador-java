/* Declaracion de variables */
init {
    nota_1, nota_2, a, b, c, d, e, f, g, h, i, w: Int
    prom, numero1, numero2 : Float
    nombre, pedro: String
}

/* Declaracion invalida de variables */
/* DECVAR {
    int hola = 3
}
*/

/* Comentario tipo 1 */
// Comentario tipo 2
/* Comentarios
multilinea */

/* Asignaciones validas*/
nombre = "Armando Esteban Quito"
pedro = "asdf"
numero1 = 2.4 + 2
numero2 = .42 * 3
nota_1 = 8 / 24
nota_2 = 4 - 1
pedro = "santi"

/* Asignaciones invalidas */
/*
nombre = 1.2
pedro = 2
numero1 = "asd"
numero2 = "asd"
nota_1 = "asd"
nota_2 = "asd"
*/

/* Rango invalido de flotante */
// float = 22222222.34444444444

/* Se pasa del rango de 40 caracteres */
// nombre = "Armando Jose Raul Esteban Sebastian Demetrio Quito"

/* Se pasa del largo maximo de id */
// out_of_range_declared_id = "pedro"

// Division por 0
// nota_1 = 8 / 0

/* Se pasa del rango de enteros de 8 bits */
// nota_1 = 8000000000000000000 */

write("Estado del alumno: ")
write(nombre)
read(nombre)

/* Parametro invalido */
// write(3)

/* Parametro invalido */
// read(3)

/* Decisiones */
if (nota_1 >= 7 || nota_2 >= 7) {
    write("Promocionado!")
}

/* Condicion not */
if(!(a < b))
{
    write("A es mayor")
}

/* Iteracion */
while (a > b) {
    write("PEDRO")
    read(a)
    if(f < g && w < h)
    {
        write("G es mayor y H es mayor")
    } else {
        write("F es menor y W es menor")
    }
}

/* Condicion invalida (mas de 2 anidaciones) */
/*
if ((a>b) && (b>c) || (c>d)) {
}
*/

prom = (nota_1 + nota_2) / 2

AllEqual( [a+w,b,c], [(d-3)*2,e,f], [g,h,i] )
REPEAT 5 [while (a > b) {
              write("PEDRO")
              read(a)
              if(f < g && w < h)
              {
                  write("G es mayor y H es mayor")
              } else {
                  write("F es menor y W es menor")
              }
          }]

REPEAT 1 [write("pedro")]

/* Sintaxis invalida */
// REPEAT a [read("hola")]

/* Sintaxis invalida */
// AllEqual( 2, [(d-3)*2,e,f], [g,h,i] )
